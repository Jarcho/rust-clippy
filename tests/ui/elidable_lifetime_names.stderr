error: these lifetime parameters can be elided
  --> tests/ui/elidable_lifetime_names.rs:9:21
   |
LL | fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) {}
   |                     ^^  ^^
   |
   = note: `-D clippy::elidable-lifetime-names` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::elidable_lifetime_names)]`
help: remove the lifetime parameters
   |
LL - fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) {}
LL + fn lifetime_param_2(_x: Ref<'_>, _y: &u8) {}
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:34:15
   |
LL | fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>
   |               ^^
   |
help: remove the lifetime parameter
   |
LL - fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>
LL + fn fn_bound_2<F, I>(_m: Lt<'_, I>, _f: F) -> Lt<'_, I>
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:44:19
   |
LL | fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str {
   |                   ^^
   |
help: remove the lifetime parameter
   |
LL - fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str {
LL + fn struct_with_lt(_foo: Foo<'_>) -> &str {
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:59:25
   |
LL | fn struct_with_lt4a<'a, 'b>(_foo: &'a Foo<'b>) -> &'a str {
   |                         ^^
   |
help: remove the lifetime parameter
   |
LL - fn struct_with_lt4a<'a, 'b>(_foo: &'a Foo<'b>) -> &'a str {
LL + fn struct_with_lt4a<'a>(_foo: &'a Foo<'_>) -> &'a str {
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:66:18
   |
LL | fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str {
   |                  ^^
   |
help: remove the lifetime parameter
   |
LL - fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str {
LL + fn alias_with_lt(_foo: FooAlias<'_>) -> &str {
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:81:24
   |
LL | fn alias_with_lt4a<'a, 'b>(_foo: &'a FooAlias<'b>) -> &'a str {
   |                        ^^
   |
help: remove the lifetime parameter
   |
LL - fn alias_with_lt4a<'a, 'b>(_foo: &'a FooAlias<'b>) -> &'a str {
LL + fn alias_with_lt4a<'a>(_foo: &'a FooAlias<'_>) -> &'a str {
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:91:24
   |
LL | fn out_return_type_lts<'a>(e: &'a str) -> Cow<'a> {
   |                        ^^
   |
help: remove the lifetime parameter
   |
LL - fn out_return_type_lts<'a>(e: &'a str) -> Cow<'a> {
LL + fn out_return_type_lts(e: &str) -> Cow<'_> {
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:103:10
   |
LL |     impl<'a> Foo for Baz<'a> {}
   |          ^^
   |
help: remove the lifetime parameter
   |
LL -     impl<'a> Foo for Baz<'a> {}
LL +     impl Foo for Baz<'_> {}
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:106:16
   |
LL |         fn baz<'a>(&'a self) -> impl Foo + 'a {
   |                ^^
   |
help: remove the lifetime parameter
   |
LL -         fn baz<'a>(&'a self) -> impl Foo + 'a {
LL +         fn baz(&self) -> impl Foo + '_ {
   |

error: these lifetime parameters can be elided
  --> tests/ui/elidable_lifetime_names.rs:196:15
   |
LL |     impl<'de, 'a, 's> Trait<'de> for UnitVariantAccess<'a, 'de, 's> {}
   |               ^^  ^^
   |
help: remove the lifetime parameters
   |
LL -     impl<'de, 'a, 's> Trait<'de> for UnitVariantAccess<'a, 'de, 's> {}
LL +     impl<'de> Trait<'de> for UnitVariantAccess<'_, 'de, '_> {}
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:220:10
   |
LL |     impl<'a> T for S1<'a> {}
   |          ^^
   |
help: remove the lifetime parameter
   |
LL -     impl<'a> T for S1<'a> {}
LL +     impl T for S1<'_> {}
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:228:14
   |
LL |     impl<'a, 'b> TA<'a> for S2<'a, 'b> {}
   |              ^^
   |
help: remove the lifetime parameter
   |
LL -     impl<'a, 'b> TA<'a> for S2<'a, 'b> {}
LL +     impl<'a> TA<'a> for S2<'a, '_> {}
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:232:10
   |
LL |     impl<'a, 'b> TB<'b> for S2<'a, 'b> {}
   |          ^^
   |
help: remove the lifetime parameter
   |
LL -     impl<'a, 'b> TB<'b> for S2<'a, 'b> {}
LL +     impl<'b> TB<'b> for S2<'_, 'b> {}
   |

error: these lifetime parameters can be elided
  --> tests/ui/elidable_lifetime_names.rs:236:10
   |
LL |     impl<'a, 'b> T for S2<'a, 'b> {}
   |          ^^  ^^
   |
help: remove the lifetime parameters
   |
LL -     impl<'a, 'b> T for S2<'a, 'b> {}
LL +     impl T for S2<'_, '_> {}
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:244:18
   |
LL |     impl<'a, 'b, 'c> TAB<'a, 'b> for S3<'a, 'b, 'c> {}
   |                  ^^
   |
help: remove the lifetime parameter
   |
LL -     impl<'a, 'b, 'c> TAB<'a, 'b> for S3<'a, 'b, 'c> {}
LL +     impl<'a, 'b> TAB<'a, 'b> for S3<'a, 'b, '_> {}
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:248:14
   |
LL |     impl<'a, 'b, 'c> TAC<'a, 'c> for S3<'a, 'b, 'c> {}
   |              ^^
   |
help: remove the lifetime parameter
   |
LL -     impl<'a, 'b, 'c> TAC<'a, 'c> for S3<'a, 'b, 'c> {}
LL +     impl<'a, 'c> TAC<'a, 'c> for S3<'a, '_, 'c> {}
   |

error: these lifetime parameters can be elided
  --> tests/ui/elidable_lifetime_names.rs:252:14
   |
LL |     impl<'a, 'b, 'c> TA<'a> for S3<'a, 'b, 'c> {}
   |              ^^  ^^
   |
help: remove the lifetime parameters
   |
LL -     impl<'a, 'b, 'c> TA<'a> for S3<'a, 'b, 'c> {}
LL +     impl<'a> TA<'a> for S3<'a, '_, '_> {}
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:256:10
   |
LL |     impl<'a, 'b, 'c> TBC<'b, 'c> for S3<'a, 'b, 'c> {}
   |          ^^
   |
help: remove the lifetime parameter
   |
LL -     impl<'a, 'b, 'c> TBC<'b, 'c> for S3<'a, 'b, 'c> {}
LL +     impl<'b, 'c> TBC<'b, 'c> for S3<'_, 'b, 'c> {}
   |

error: these lifetime parameters can be elided
  --> tests/ui/elidable_lifetime_names.rs:260:10
   |
LL |     impl<'a, 'b, 'c> TB<'b> for S3<'a, 'b, 'c> {}
   |          ^^      ^^
   |
help: remove the lifetime parameters
   |
LL -     impl<'a, 'b, 'c> TB<'b> for S3<'a, 'b, 'c> {}
LL +     impl<'b> TB<'b> for S3<'_, 'b, '_> {}
   |

error: these lifetime parameters can be elided
  --> tests/ui/elidable_lifetime_names.rs:264:10
   |
LL |     impl<'a, 'b, 'c> TC<'c> for S3<'a, 'b, 'c> {}
   |          ^^  ^^
   |
help: remove the lifetime parameters
   |
LL -     impl<'a, 'b, 'c> TC<'c> for S3<'a, 'b, 'c> {}
LL +     impl<'c> TC<'c> for S3<'_, '_, 'c> {}
   |

error: these lifetime parameters can be elided
  --> tests/ui/elidable_lifetime_names.rs:268:10
   |
LL |     impl<'a, 'b, 'c> T for S3<'a, 'b, 'c> {}
   |          ^^  ^^  ^^
   |
help: remove the lifetime parameters
   |
LL -     impl<'a, 'b, 'c> T for S3<'a, 'b, 'c> {}
LL +     impl T for S3<'_, '_, '_> {}
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:283:16
   |
LL |     fn _f3<'a, 'b>(x: &'a [u32], _: Box<dyn Iterator<Item = u32> + 'b>) -> Box<dyn Iterator<Item = u32> + 'a> {
   |                ^^
   |
help: remove the lifetime parameter
   |
LL -     fn _f3<'a, 'b>(x: &'a [u32], _: Box<dyn Iterator<Item = u32> + 'b>) -> Box<dyn Iterator<Item = u32> + 'a> {
LL +     fn _f3<'a>(x: &'a [u32], _: Box<dyn Iterator<Item = u32> + '_>) -> Box<dyn Iterator<Item = u32> + 'a> {
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:291:11
   |
LL |     fn _f<'a>(x: &'a [u32]) -> Box<dyn Iterator<Item = u32> + 'a> {
   |           ^^
   |
help: remove the lifetime parameter
   |
LL -     fn _f<'a>(x: &'a [u32]) -> Box<dyn Iterator<Item = u32> + 'a> {
LL +     fn _f(x: &[u32]) -> Box<dyn Iterator<Item = u32> + '_> {
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:296:12
   |
LL |     fn _f2<'a>(x: Box<dyn Iterator<Item = u32> + 'a>) -> Box<dyn Iterator<Item = u32> + 'a> {
   |            ^^
   |
help: remove the lifetime parameter
   |
LL -     fn _f2<'a>(x: Box<dyn Iterator<Item = u32> + 'a>) -> Box<dyn Iterator<Item = u32> + 'a> {
LL +     fn _f2(x: Box<dyn Iterator<Item = u32> + '_>) -> Box<dyn Iterator<Item = u32> + '_> {
   |

error: this lifetime parameter can be elided
  --> tests/ui/elidable_lifetime_names.rs:301:16
   |
LL |     fn _f3<'a, 'b>(x: &'a [u32], _: Box<dyn Iterator<Item = u32> + 'b>) -> Box<dyn Iterator<Item = u32> + 'a> {
   |                ^^
   |
help: remove the lifetime parameter
   |
LL -     fn _f3<'a, 'b>(x: &'a [u32], _: Box<dyn Iterator<Item = u32> + 'b>) -> Box<dyn Iterator<Item = u32> + 'a> {
LL +     fn _f3<'a>(x: &'a [u32], _: Box<dyn Iterator<Item = u32> + '_>) -> Box<dyn Iterator<Item = u32> + 'a> {
   |

error: aborting due to 25 previous errors

