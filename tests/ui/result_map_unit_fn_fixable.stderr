error: called `map(f)` on an `Result` value where `f` is a function that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:32:5
   |
LL |     x.field.map(do_nothing);
   |     ^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(x_field) = x.field { do_nothing(x_field) }`
   |
   = note: `-D clippy::result-map-unit-fn` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::result_map_unit_fn)]`

error: called `map(f)` on an `Result` value where `f` is a function that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:35:5
   |
LL |     x.field.map(do_nothing);
   |     ^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(x_field) = x.field { do_nothing(x_field) }`

error: called `map(f)` on an `Result` value where `f` is a function that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:38:5
   |
LL |     x.field.map(diverge);
   |     ^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(x_field) = x.field { diverge(x_field) }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:45:5
   |
LL |     x.field.map(|value| x.do_result_nothing(value + captured));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { x.do_result_nothing(value + captured) }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:48:5
   |
LL |     x.field.map(|value| { x.do_result_plus_one(value + captured); });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { x.do_result_plus_one(value + captured); }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:52:5
   |
LL |     x.field.map(|value| do_nothing(value + captured));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { do_nothing(value + captured) }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:55:5
   |
LL |     x.field.map(|value| { do_nothing(value + captured) });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { do_nothing(value + captured) }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:58:5
   |
LL |     x.field.map(|value| { do_nothing(value + captured); });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { do_nothing(value + captured); }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:61:5
   |
LL |     x.field.map(|value| { { do_nothing(value + captured); } });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { do_nothing(value + captured); }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:65:5
   |
LL |     x.field.map(|value| diverge(value + captured));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { diverge(value + captured) }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:68:5
   |
LL |     x.field.map(|value| { diverge(value + captured) });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { diverge(value + captured) }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:71:5
   |
LL |     x.field.map(|value| { diverge(value + captured); });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { diverge(value + captured); }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:74:5
   |
LL |     x.field.map(|value| { { diverge(value + captured); } });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { diverge(value + captured); }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:80:5
   |
LL |     x.field.map(|value| { let y = plus_one(value + captured); });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { let y = plus_one(value + captured); }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:83:5
   |
LL |     x.field.map(|value| { plus_one(value + captured); });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { plus_one(value + captured); }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:86:5
   |
LL |     x.field.map(|value| { { plus_one(value + captured); } });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { plus_one(value + captured); }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:90:5
   |
LL |     x.field.map(|ref value| { do_nothing(value + captured) });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(ref value) = x.field { do_nothing(value + captured) }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_fixable.rs:93:5
   |
LL |     x.field.map(|value| println!("{value:?}"));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { println!("{value:?}") }`

error: aborting due to 18 previous errors

